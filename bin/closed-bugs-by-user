#!/bin/bash

# Check if jq is installed
if ! command -v jq &>/dev/null; then
  echo "jq could not be found, please install it to proceed."
  exit
fi

# Jira credentials and URL
JIRA_URL="https://$JIRA_DOMAIN"
JIRA_USER="$JIRA_USERNAME"
JIRA_API_TOKEN="$JIRA_API_TOKEN"

# Check for project parameter
PROJECT_KEY="$1"

# Define output directory
if [ -z "$PROJECT_KEY" ]; then
  output_dir="output/All_Projects/Closed_Bugs_By_User"
else
  output_dir="output/$PROJECT_KEY/Closed_Bugs_By_User"
fi
mkdir -p $output_dir

# Data file for gnuplot
user_data_file="$output_dir/user_data.dat"
echo "# User ClosedBugs" >$user_data_file

# Fetch closed bugs for the last 12 months
for month_offset in {11..0}; do
  month_year=$(date -v-${month_offset}m "+%Y-%m")
  JQL="type = Bug AND status CHANGED TO (\"Resolved\", \"Closed\", \"Done\") DURING (startOfMonth(-$month_offset), endOfMonth(-$month_offset))"
  if [ -n "$PROJECT_KEY" ]; then
    JQL="project = $PROJECT_KEY AND $JQL"
  else
    JQL="project not in (VUL, SQP, SES, SYS) AND $JQL"
  fi
  # URL encode the JQL
  encoded_jql=$(echo -n "$JQL" | jq -sRr @uri)

  start_at=0

  while true; do
    # Fetch issues from Jira using the encoded JQL
    response=$(curl -s -u $JIRA_USER:$JIRA_API_TOKEN -X GET -H "Content-Type: application/json" \
      "$JIRA_URL/rest/api/3/search?jql=$encoded_jql&fields=assignee&maxResults=100&startAt=$start_at")

    issues=$(echo $response | jq -c '.issues[]')
    if [ -z "$issues" ]; then
      break
    fi

    for issue in $issues; do
      assignee=$(echo $issue | jq -r '.fields.assignee.displayName')
      if [ -n "$assignee" ]; then
        echo "$assignee" >>$user_data_file
      fi
    done

    start_at=$((start_at + 100))
  done
done

# Count closed bugs by user
sort $user_data_file | uniq -c | sort -nr | awk '{print $2, $1}' >$user_data_file

# Generate graph using gnuplot
gnuplot -e "set terminal png size 800,600; set output '$output_dir/closed_bugs_by_user.png'; set title 'Closed Bugs by User (Last 12 Months)'; set xlabel 'User'; set ylabel 'Closed Bugs'; set xtics rotate; plot '$user_data_file' using 2:xtic(1) with histogram title 'Closed Bugs';"

echo "Graph generated: $output_dir/closed_bugs_by_user.png"
