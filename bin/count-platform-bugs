#!/usr/bin/env bash

# Ensure JIRA_API_TOKEN is set in your environment
if [ -z "$JIRA_API_TOKEN" ]; then
  echo "Error: JIRA_API_TOKEN is not set."
  exit 1
fi
JIRA_DOMAIN="intellum.atlassian.net"
JIRA_USERNAME="swilliams@intellum.com"

# Get the current year and month
CURRENT_YEAR=$(date +%Y)
CURRENT_MONTH=$(date +%m)

# Initialize an array to store issue counts
typeset -A ISSUE_COUNTS

# Loop over each month for the last year
YEAR=$CURRENT_YEAR
MONTH=$CURRENT_MONTH

for ((i = 0; i < 12; i++)); do
  # Calculate the relative month offset
  OFFSET=$(((CURRENT_YEAR - YEAR) * 12 + (CURRENT_MONTH - MONTH)))
  echo $OFFSET

  # Jira JQL query to find issues in the specified project and conditions
  CURRENT_DATE=$(date -v1d -v-${OFFSET}m +%Y-%m-%d)
  JQL="project = \"Platform Administration\" AND issuetype = Bug AND created <= \"$CURRENT_DATE\" AND (resolved > \"$CURRENT_DATE\" OR resolved is EMPTY)"

  # URL encode the JQL query
  ENCODED_JQL=$(echo $JQL | jq -sRr @uri)

  # Jira API endpoint
  JIRA_API_URL="https://$JIRA_DOMAIN/rest/api/2/search?jql=$ENCODED_JQL"

  # Fetch the count of issues from Jira
  RESPONSE=$(curl -s -u $JIRA_USERNAME:$JIRA_API_TOKEN -X GET \
    -H "Content-Type: application/json" $JIRA_API_URL)

  # Print the raw response for debugging
  # echo "$RESPONSE" | jq '.issues[] | {title: .fields.summary, url: .self}'

  # Extract the count of issues
  ISSUE_COUNT=$(echo $RESPONSE | jq '.total')

  # Get the month name
  MONTH_NAME=$(date -v1d -v-${OFFSET}m +%B)

  # Store the issue count in the array
  ISSUE_COUNTS["$YEAR-$MONTH_NAME"]=$ISSUE_COUNT

  # Decrement the month and year
  MONTH=$((MONTH - 1))
  if [ $MONTH -le 0 ]; then
    MONTH=12
    YEAR=$((YEAR - 1))
  fi
done

# Generate data file for gnuplot
DATA_FILE=$(mktemp)
for key in $(printf "%s\n" "${!ISSUE_COUNTS[@]}" | sort -t '-' -k1,1n -k2,2M); do
  echo -e "$key\t${ISSUE_COUNTS[$key]}" >>$DATA_FILE
done

# Plot the data using gnuplot
gnuplot -persist <<-EOFMarker
  set terminal dumb size 120, 30
  set title "Monthly Unresolved Bugs in Platform Administration"
  set xlabel "Month"
  set ylabel "Number of Bugs"
  set boxwidth 0.5
  set style fill solid
  plot "$DATA_FILE" using 2:xtic(1) with boxes title "Bugs"
EOFMarker

# Clean up
rm $DATA_FILE
