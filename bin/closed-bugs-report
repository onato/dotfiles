#!/bin/bash

# Check if jq is installed
if ! command -v jq &>/dev/null; then
  echo "jq could not be found, please install it to proceed."
  exit
fi

# Jira credentials and URL
JIRA_URL="https://$JIRA_DOMAIN"
JIRA_USER="$JIRA_USERNAME"
JIRA_API_TOKEN="$JIRA_API_TOKEN"

# Check for project parameter
PROJECT_KEY="$1"

# Calculate the start date for 3 months ago
start_date=$(date -v-6m "+%Y-%m-%d")

# JQL to find bugs closed in the last 3 months
JQL="type = Bug AND status changed to (\"Resolved\", \"Closed\", \"Done\") after \"$start_date\""
if [ -n "$PROJECT_KEY" ]; then
  JQL="project = $PROJECT_KEY AND $JQL"
fi

# URL encode the JQL
encoded_jql=$(echo "$JQL" | jq -sRr @uri)

start_at=0
user_bug_count_file=$(mktemp)

while true; do
  # Fetch issues from Jira using the encoded JQL
  response=$(curl -s -u $JIRA_USER:$JIRA_API_TOKEN -X GET -H "Content-Type: application/json" \
    "$JIRA_URL/rest/api/3/search?jql=$encoded_jql&fields=assignee&expand=changelog&maxResults=100&startAt=$start_at")

  issues=$(echo "$response" | jq -c '.issues[]?')
  if [ -z "$issues" ]; then
    break
  fi

  while IFS= read -r issue; do
    assignee=$(echo "$issue" | jq -r '.fields.assignee.displayName // empty')
    if [ -n "$assignee" ]; then
      echo "$assignee" >>"$user_bug_count_file"
    else
      # Find the user who changed the status to "Done"
      closed_by=$(echo "$issue" | jq -r '.changelog.histories[] | select(.items[] | select(.field == "status" and .toString == "Done")) | .author.displayName' | head -n 1)
      echo "${closed_by:-Unknown}" >>"$user_bug_count_file"
    fi
  done <<<"$issues"

  start_at=$((start_at + 100))
done

echo "Bugs closed in the last 3 months:"
sort "$user_bug_count_file" | uniq -c | sort -nr | while read -r count user; do
  echo "$count: $user"
done

# Clean up the temporary file
rm "$user_bug_count_file"
