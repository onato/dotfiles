#!/bin/bash

# Check if jq is installed
if ! command -v jq &>/dev/null; then
  echo "jq could not be found, please install it to proceed."
  exit
fi

# Jira credentials and URL
JIRA_URL="https://intellum.atlassian.net"
JIRA_USER="swilliams@intellum.com"
JIRA_API_TOKEN="$JIRA_API_TOKEN"

# JQL for fetching issues in the backlog of board with ID 48
JQL='filter=10246%20ORDER%20BY%20created%20DESC'

# Fetch issues from Jira using the JQL
response=$(curl -s -u $JIRA_USER:$JIRA_API_TOKEN -X GET -H "Content-Type: application/json" \
  "$JIRA_URL/rest/api/3/search?jql=$JQL&fields=created&maxResults=200")

# Calculate issue ages
bucket_size=10

for issue in $(echo $response | jq -c '.issues[]'); do
  created=$(echo $issue | jq -r '.fields.created')
  issue_key=$(echo $issue | jq -r '.key')
  created_date=$(date -u -j -f "%Y-%m-%dT%H:%M:%S" "${created:0:19}" "+%s")
  current_date=$(date "+%s")
  days_open=$(((current_date - created_date) / 86400))
  bucket=$((days_open / bucket_size * bucket_size))
  age_buckets[$bucket]=$((age_buckets[$bucket] + 1))
done

# Display histogram
echo "Histogram of issue ages:"
for bucket in "${!age_buckets[@]}"; do
  count=${age_buckets[$bucket]}

  # Define max padding width (adjust 10 to suit your range length)
  padding=3
  # Format the output with printf to pad bucket range and align "days:"
  printf "%${padding}s - %${padding}s days: %s\n" "$bucket" "$((bucket + bucket_size - 1))" "$(printf '%*s' $count | tr ' ' '#')"
done

if [ ${#age_buckets[@]} -eq 0 ]; then
  echo "No issues found."
fi
